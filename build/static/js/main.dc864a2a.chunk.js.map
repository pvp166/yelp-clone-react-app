{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/Searchbar/Searchbar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","business","props","react_default","a","createElement","class","className","src","img_url","alt","title","address","rating","review_count","categories","React","Component","BusinessList","businesses","map","Business_Business_Business","Searchbar","_this","call","handleSortChange","bind","assertThisInitialized","handleLocationChange","handleTermChange","e","sortBy","target","onSortChange","term","onTermChange","location","onLocationChange","id","onChange","placeholder","type","onClick","Yelp","fetch","concat","headers","Authorization","then","response","json","jsonResponse","image_url","name","display_address","App","state","sortChange","locationChange","termChange","handleSearchClick","setState","newLocation","newTerm","_this2","console","log","Searchbar_Searchbar_Searchbar","BusinessList_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc864a2a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Business.css\";\r\n\r\nexport class Business extends React.Component {\r\n  render() {\r\n    const { business } = this.props;\r\n    return (\r\n      <div class=\"Business\">\r\n        <div className=\"image-container\">\r\n          <img src={business.img_url} alt={business.title} />\r\n        </div>\r\n        <p class=\"title\">{business.title}</p>\r\n        <div class=\"content\">\r\n          <div class=\"businessAddress\">\r\n            <p class=\"address\">{business.address}</p>\r\n          </div>\r\n          <div class=\"businessReview\">\r\n            <h3 class=\"rating\">{business.rating}</h3>\r\n            <p class=\"review_count\">{business.review_count} reviews</p>\r\n            <h3 class=\"categories\">{business.categories}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Business } from \"../Business/Business.js\";\r\nimport \"./BusinessList.css\";\r\n\r\nexport class BusinessList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div class=\"BusinessList\">\r\n        {this.props.businesses.map(business => {\r\n          return <Business business={business} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Searchbar.css\";\r\n\r\n// const sortBy = {\r\n//   best_match: \"Best Match\",\r\n//   most_viewed: \"Most Viewed\",\r\n//   highest_rated: \"Highest Rated\"\r\n// }\r\n\r\nexport class Searchbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSortChange = this.handleSortChange.bind(this);\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n  }\r\n\r\n  handleSortChange(e) {\r\n    let sortBy = e.target.value;\r\n    this.props.onSortChange(sortBy);\r\n  }\r\n\r\n  handleTermChange(e) {\r\n    const term = e.target.value;\r\n    this.props.onTermChange(term);\r\n  }\r\n\r\n  handleLocationChange(e) {\r\n    const location = e.target.value;\r\n    this.props.onLocationChange(location);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"Searchbar\">\r\n        <h1 id=\"slogan\" className=\"text-center\">\r\n          Exploring New Restaurants\r\n        </h1>\r\n        <div className=\"searchForm\">\r\n          <div class=\"textField\">\r\n            <input\r\n              onChange={this.handleTermChange}\r\n              placeholder=\"Pizza, Starbuck, etc.\"\r\n              type=\"text\"\r\n              id=\"termTextbox\"\r\n            />\r\n            <input\r\n              onChange={this.handleLocationChange}\r\n              placeholder=\"New York, Seatle, etc.\"\r\n              type=\"text\"\r\n              id=\"locationTextbox\"\r\n            />\r\n          </div>\r\n          <select onChange={this.handleSortChange} id=\"sortBy\">\r\n            <option value=\"best_match\">Best Match</option>\r\n            <option value=\"rating\">Highest Rated</option>\r\n            <option value=\"review_count\">Most Viewed</option>\r\n          </select>\r\n          <button\r\n            onClick={this.props.onClick}\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            id=\"searchButton\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const apiKey =\r\n  \"GJuSGrePpRtM0gzxBEtL_MmU5_gaMWQSz2mtbc3hsRXofzk7EkLw1dVlQn4qB5Jb7MTn3dhhM05akhtsuvcYIj1LxkelagsOQRQVOWJSNPZc9kfb2TgWS_bgDd_FXHYx\";\r\n\r\nexport const Yelp = {\r\n  searchYelp(term, location, sortBy) {\r\n    return fetch(\r\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${apiKey}`\r\n        }\r\n      }\r\n    )\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(jsonResponse => {\r\n        // Checks to see if jsonResponse has a businesses key\r\n        if (jsonResponse.businesses) {\r\n          return jsonResponse.businesses.map(business => {\r\n            return {\r\n              id: business.id,\r\n              img_url: business.image_url,\r\n              title: business.name,\r\n              address: `${business.location.display_address[0]}, ${\r\n                business.location.display_address[1]\r\n              }`,\r\n              categories: business.categories[0].title,\r\n              rating: business.rating,\r\n              review_count: business.review_count\r\n            };\r\n          });\r\n        }\r\n      });\r\n  }\r\n};\r\n","// Author: Duy Trinh\n\nimport React from \"react\";\nimport \"./App.css\";\nimport { BusinessList } from \"./components/BusinessList/BusinessList.js\";\nimport { Searchbar } from \"./components/Searchbar/Searchbar.js\";\nimport { Yelp } from \"./util/Yelp.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBy: \"best_match\",\n      term: \"\",\n      location: \"\",\n      businesses: []\n    };\n\n    this.sortChange = this.sortChange.bind(this);\n    this.locationChange = this.locationChange.bind(this);\n    this.termChange = this.termChange.bind(this);\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n  }\n\n  sortChange(sortBy) {\n    this.setState({\n      sortBy: sortBy\n    });\n  }\n\n  locationChange(newLocation) {\n    this.setState({\n      location: newLocation\n    });\n  }\n\n  termChange(newTerm) {\n    this.setState({\n      term: newTerm\n    });\n  }\n\n  handleSearchClick() {\n    Yelp.searchYelp(\n      this.state.term,\n      this.state.location,\n      this.state.sortBy\n    ).then(businesses =>\n      this.setState({\n        businesses: businesses\n      })\n    );\n  }\n\n  // get_search_info() {\n  //   return {\n  //     term: this.state.term,\n  //     location: this.state.location,\n  //     sortBy: this.state.sortBy\n  //   };\n  // }\n\n  render() {\n    // const searchInfo = this.get_search_info();\n    console.log(this.state.businesses);\n    return (\n      <div className=\"App\">\n        <Searchbar\n          onTermChange={this.termChange}\n          onLocationChange={this.locationChange}\n          onSortChange={this.sortChange}\n          onClick={this.handleSearchClick}\n        />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}